{
    "swagger": "2.0",
    "info": {
        "description": "Backend for Bazar - NFT marketplace on Ethereum",
        "title": "Bazar NFT Marketplace API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Egor Gladkikh",
            "url": "https://github.com/egorgladkikh",
            "email": "egor@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/comments": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Создать комментарий",
                "parameters": [
                    {
                        "description": "Комментарий",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateCommentReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.Comment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/comments/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Получить комментарий по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID комментария",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.Comment"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nfts": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Получить все NFT",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.NFT"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Обновить Token ID для NFT",
                "parameters": [
                    {
                        "description": "Update Token ID Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateTokenIdReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.NFT"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Создать новый NFT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название NFT",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Описание NFT",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Цена",
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл изображения",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Адрес владельца",
                        "name": "eth_address",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.NFT"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nfts/proposed": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Получить предложенные NFT",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.NFT"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nfts/sales": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Получить NFT на продаже",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.NFT"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nfts/user": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Получить NFT пользователя по Ethereum-адресу",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ethereum Address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.NFT"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/nfts/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Получить NFT по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NFT ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.NFT"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Получить список всех пользователей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Создать нового пользователя",
                "parameters": [
                    {
                        "description": "User payload",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/requests.CreateUserRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/check": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Проверить существование пользователя по адресу",
                "parameters": [
                    {
                        "description": "Ethereum Address",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CheckUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Получить пользователя по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Comment": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content текст комментария\nswagger:model",
                    "type": "string"
                },
                "created_at": {
                    "description": "CreatedAt дата создания комментария\nswagger:model",
                    "type": "string"
                },
                "id": {
                    "description": "ID уникальный идентификатор комментария\nswagger:model",
                    "type": "integer"
                },
                "nft_id": {
                    "description": "NFTID идентификатор NFT, к которому относится комментарий\nswagger:model",
                    "type": "integer"
                },
                "owner_id": {
                    "description": "OwnerId идентификатор пользователя, создавшего комментарий\nswagger:model",
                    "type": "integer"
                },
                "updated_at": {
                    "description": "UpdatedAt дата последнего обновления комментария\nswagger:model",
                    "type": "string"
                }
            }
        },
        "entities.NFT": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description описание NFT\nswagger:model",
                    "type": "string"
                },
                "id": {
                    "description": "ID уникальный идентификатор NFT\nswagger:model",
                    "type": "integer"
                },
                "image_path": {
                    "description": "ImagePath путь к изображению для NFT\nswagger:model",
                    "type": "string"
                },
                "in_sales": {
                    "description": "Sales флаг, указывающий, продается ли NFT\nswagger:model",
                    "type": "boolean"
                },
                "name": {
                    "description": "Name название NFT\nswagger:model",
                    "type": "string"
                },
                "owner_id": {
                    "description": "Owner идентификатор владельца\nswagger:model",
                    "type": "integer"
                },
                "price": {
                    "description": "Price цена NFT\nswagger:model",
                    "type": "string"
                },
                "proposal_id": {
                    "description": "ProposalId идентификатор предложения для этого NFT\nswagger:model",
                    "type": "integer"
                },
                "proposed": {
                    "description": "Proposed флаг, указывающий, предложен ли NFT\nswagger:model",
                    "type": "boolean"
                },
                "token_id": {
                    "description": "TokenID идентификатор токена\nswagger:model",
                    "type": "integer"
                },
                "token_uri": {
                    "description": "TokenURI URI для токена\nswagger:model",
                    "type": "string"
                },
                "votes_amount": {
                    "description": "Votes количество голосов за этот NFT\nswagger:model",
                    "type": "string"
                }
            }
        },
        "entities.User": {
            "type": "object",
            "properties": {
                "ethAddress": {
                    "description": "EthAddress Ethereum адрес пользователя\nswagger:model",
                    "type": "string"
                },
                "id": {
                    "description": "ID уникальный идентификатор пользователя\nswagger:model",
                    "type": "integer"
                }
            }
        },
        "requests.CheckUserRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "requests.CreateCommentReq": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "owner_comment": {
                    "type": "integer"
                },
                "token_id": {
                    "type": "integer"
                }
            }
        },
        "requests.CreateUserRequest": {
            "type": "object",
            "properties": {
                "eth_address": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                }
            }
        },
        "requests.UpdateTokenIdReq": {
            "type": "object"
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}